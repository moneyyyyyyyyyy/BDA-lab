bmsce@bmsce-Precision-T1700:~$ mongo.sh
mongo.sh: command not found
bmsce@bmsce-Precision-T1700:~$ mongosh

Command 'mongosh' not found, did you mean:

  command 'mongos' from deb mongodb-server-core
(1:3.6.9+really3.6.8+90~g8e540c0b6d-0ubuntu2)

Try: sudo apt install <deb name>

bmsce@bmsce-Precision-T1700:~$ mongodbsh
mongodbsh: command not found
bmsce@bmsce-Precision-T1700:~$ mongodb

Command 'mongodb' not found, did you mean:

  command 'mongod' from deb mongodb-server-core
(1:3.6.9+really3.6.8+90~g8e540c0b6d-0ubuntu2)

Try: sudo apt install <deb name>

bmsce@bmsce-Precision-T1700:~$ mongo
MongoDB shell version v3.6.8
connecting to: mongodb://127.0.0.1:27017
Implicit session: session { "id" :
UUID("39c28cce-395e-4cfc-aeca-97b72f2806c5") }
MongoDB server version: 3.6.8
Server has startup warnings:
2023-04-01T09:16:24.545+0530 I STORAGE  [initandlisten]
2023-04-01T09:16:24.545+0530 I STORAGE  [initandlisten] ** WARNING:
Using the XFS filesystem is strongly recommended with the WiredTiger
storage engine
2023-04-01T09:16:24.545+0530 I STORAGE  [initandlisten] **
See http://dochub.mongodb.org/core/prodnotes-filesystem
2023-04-01T09:16:31.820+0530 I CONTROL  [initandlisten]
2023-04-01T09:16:31.820+0530 I CONTROL  [initandlisten] ** WARNING:
Access control is not enabled for the database.
2023-04-01T09:16:31.821+0530 I CONTROL  [initandlisten] **
Read and write access to data and configuration is unrestricted.
2023-04-01T09:16:31.821+0530 I CONTROL  [initandlisten]
> show db
2023-04-01T09:20:58.208+0530 E QUERY    [thread1] Error: don't know
how to show [db] :
shellHelper.show@src/mongo/shell/utils.js:997:11
shellHelper@src/mongo/shell/utils.js:750:15
@(shellhelp2):1:1
> show dbs
Student   0.000GB
admin     0.000GB
config    0.000GB
dm        0.000GB
faculty   0.000GB
labtest   0.000GB
local     0.000GB
myDB      0.000GB
playlist  0.000GB
sample    0.000GB
studDB    0.000GB
studb     0.000GB
students  0.000GB
t1        0.000GB
test      0.000GB
> db
test
> use erenyeager
switched to db erenyeager
> db
erenyeager
> use mikasa
switched to db mikasa
> db
mikasa
> show dbs
Student   0.000GB
admin     0.000GB
config    0.000GB
dm        0.000GB
faculty   0.000GB
labtest   0.000GB
local     0.000GB
myDB      0.000GB
playlist  0.000GB
sample    0.000GB
studDB    0.000GB
studb     0.000GB
students  0.000GB
t1        0.000GB
test      0.000GB
> use aot
switched to db aot
> db
aot
> db.createCollection("surveycorps")
{ "ok" : 1 }
> db.createCollection("kingfritz")
{ "ok" : 1 }
> db.kingfritz.drop()
true
> db.surveycorps.find({});
{ "_id" : ObjectId("6427ac890d554b2816900352"), "id" : 1, "name" :
"Mikasa", "grade" : "10", "special" : "ackerman" }
{ "_id" : ObjectId("6427ace10d554b2816900353"), "id" : 2, "name" :
"eren", "grade" : "10", "special" : "attacktitan" }
> db.surveycorps.update({id:"2",grade:"10",special:"attactitan },{4set:{name:"ERENYEAGER" } },{upsert:true} );
2023-04-01T09:43:00.954+0530 E QUERY    [thread1] SyntaxError: missing
} after property list @(shell):1:76
> db.surveycorps.update({id:"2",grade:"10",special:"attactitan },{$set:{name:"ERENYEAGER" } },{upsert:true} );
2023-04-01T09:43:47.067+0530 E QUERY    [thread1] SyntaxError: missing
} after property list @(shell):1:76
> db.surveycorps.update({id:"2",grade:"10",special:"attactitan" },{$set:{name:"ERENYEAGER" }},{upsert:true});
WriteResult({
"nMatched" : 0,
"nUpserted" : 1,
"nModified" : 0,
"_id" : ObjectId("6427afbb2a14840302172849")
})
> db.surveycorps.find({special:"attacktitan"});
{ "_id" : ObjectId("6427ace10d554b2816900353"), "id" : 2, "name" :
"eren", "grade" : "10", "special" : "attacktitan" }
> db.surveycorps.update({id:"2",grade:"10",special:"attacktitan" },{$set:{name:"ERENYEAGER" }},{upsert:true});
WriteResult({
"nMatched" : 0,
"nUpserted" : 1,
"nModified" : 0,
"_id" : ObjectId("6427b0df2a14840302172850")
})
> db.surveycorps.find({special:"attacktitan"});
{ "_id" : ObjectId("6427ace10d554b2816900353"), "id" : 2, "name" :
"eren", "grade" : "10", "special" : "attacktitan" }
{ "_id" : ObjectId("6427b0df2a14840302172850"), "grade" : "10", "id" :
"2", "special" : "attacktitan", "name" : "ERENYEAGER" }
> db.surveycorps.insert({_id:1,name:"Mikasa",grade:"10",special } )
2023-04-01T09:50:58.484+0530 E QUERY    [thread1] ReferenceError:
special is not defined :
@(shell):1:55
> db.surveycorps.insert({_id:1,name:"Mikasa",grade:"10",special } );
2023-04-01T09:51:19.876+0530 E QUERY    [thread1] ReferenceError:
special is not defined :
@(shell):1:55
> db.surveycorps.insert({_id:1,name:"Mikasa",grade:"10",special:"ackerman" } );
WriteResult({ "nInserted" : 1 })
> db.surveycorps.insert({_id:1,name:"armin",grade:"10",special:"mind" } );
WriteResult({
"nInserted" : 0,
"writeError" : {
"code" : 11000,
"errmsg" : "E11000 duplicate key error collection: aot.surveycorps
index: _id_ dup key: { : 1.0 }"
}
})
> db.surveycorps.insert({_id:2,name:"armin",grade:"10",special:"mind" } );
WriteResult({ "nInserted" : 1 })
> db.surveycorps.update({_id:2,name:"armin",grade:"10" },{$set:{special:"colossaltitan" }},{upsert:true});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.surveycorps.find({});
{ "_id" : ObjectId("6427ac890d554b2816900352"), "id" : 1, "name" :
"Mikasa", "grade" : "10", "special" : "ackerman" }
{ "_id" : ObjectId("6427ace10d554b2816900353"), "id" : 2, "name" :
"eren", "grade" : "10", "special" : "attacktitan" }
{ "_id" : ObjectId("6427afbb2a14840302172849"), "grade" : "10", "id" :
"2", "special" : "attactitan", "name" : "ERENYEAGER" }
{ "_id" : ObjectId("6427b0df2a14840302172850"), "grade" : "10", "id" :
"2", "special" : "attacktitan", "name" : "ERENYEAGER" }
{ "_id" : 1, "name" : "Mikasa", "grade" : "10", "special" : "ackerman" }
{ "_id" : 2, "name" : "armin", "grade" : "10", "special" : "colossaltitan" }
> db.surveycorps.find({},{name:1,grade:1,id:0,_id:0} );
Error: error: {
"ok" : 0,
"errmsg" : "Projection cannot have a mix of inclusion and exclusion.",
"code" : 2,
"codeName" : "BadValue"
}
> db.surveycorps.find({},{name:1,grade:1,_id:0} );
{ "name" : "Mikasa", "grade" : "10" }
{ "name" : "eren", "grade" : "10" }
{ "grade" : "10", "name" : "ERENYEAGER" }
{ "grade" : "10", "name" : "ERENYEAGER" }
{ "name" : "Mikasa", "grade" : "10" }
{ "name" : "armin", "grade" : "10" }
> db.surveycorps.find({},{name:1,grade:1,_id:0} ).pretty(0);
{ "name" : "Mikasa", "grade" : "10" }
{ "name" : "eren", "grade" : "10" }
{ "grade" : "10", "name" : "ERENYEAGER" }
{ "grade" : "10", "name" : "ERENYEAGER" }
{ "name" : "Mikasa", "grade" : "10" }
{ "name" : "armin", "grade" : "10" }
> db.surveycorps.find({},{name:1,grade:1,_id:0} ).pretty();
{ "name" : "Mikasa", "grade" : "10" }
{ "name" : "eren", "grade" : "10" }
{ "grade" : "10", "name" : "ERENYEAGER" }
{ "grade" : "10", "name" : "ERENYEAGER" }
{ "name" : "Mikasa", "grade" : "10" }
{ "name" : "armin", "grade" : "10" }
> db.surveycorps.insert({_id:3,name:"jean",grade:"5",special:"horseface" } );
WriteResult({ "nInserted" : 1 })
> db.surveycorps.insert({_id:4,name:"connie",grade:"5",special:"dumb" } );
WriteResult({ "nInserted" : 1 })
> db.surveycorps.find({grade:{eq:"5"}}).pretty();
>
> db.surveycorps.find({grade:{eq:"5"}}).pretty();
> db.surveycorps.find({grade:{$eq:"5"}}).pretty();
{ "_id" : 3, "name" : "jean", "grade" : "5", "special" : "horseface" }
{ "_id" : 4, "name" : "connie", "grade" : "5", "special" : "dumb" }
> db.surveycorps.find({special:{$in:["dumb","colossaltitan"]}}).pretty();
{
"_id" : 2,
"name" : "armin",
"grade" : "10",
"special" : "colossaltitan"
}
{ "_id" : 4, "name" : "connie", "grade" : "5", "special" : "dumb" }
> db.surveycorps.find(name:/^M/});
2023-04-01T10:06:27.783+0530 E QUERY    [thread1] SyntaxError: missing
) after argument list @(shell):1:24
> db.surveycorps.find({name:/^M/});
{ "_id" : ObjectId("6427ac890d554b2816900352"), "id" : 1, "name" :
"Mikasa", "grade" : "10", "special" : "ackerman" }
{ "_id" : 1, "name" : "Mikasa", "grade" : "10", "special" : "ackerman" }
> db.surveycorps.find({name:/e/});
{ "_id" : ObjectId("6427ace10d554b2816900353"), "id" : 2, "name" :
"eren", "grade" : "10", "special" : "attacktitan" }
{ "_id" : 3, "name" : "jean", "grade" : "5", "special" : "horseface" }
{ "_id" : 4, "name" : "connie", "grade" : "5", "special" : "dumb" }
> db.surveycorps.count();
8
> db.surveycorps.find().sort({name:-1}).pretty();
{ "_id" : 3, "name" : "jean", "grade" : "5", "special" : "horseface" }
{
"_id" : ObjectId("6427ace10d554b2816900353"),
"id" : 2,
"name" : "eren",
"grade" : "10",
"special" : "attacktitan"
}
{ "_id" : 4, "name" : "connie", "grade" : "5", "special" : "dumb" }
{
"_id" : 2,
"name" : "armin",
"grade" : "10",
"special" : "colossaltitan"
}
{
"_id" : ObjectId("6427ac890d554b2816900352"),
"id" : 1,
"name" : "Mikasa",
"grade" : "10",
"special" : "ackerman"
}
{ "_id" : 1, "name" : "Mikasa", "grade" : "10", "special" : "ackerman" }
{
"_id" : ObjectId("6427afbb2a14840302172849"),
"grade" : "10",
"id" : "2",
"special" : "attactitan",
"name" : "ERENYEAGER"
}
{
"_id" : ObjectId("6427b0df2a14840302172850"),
"grade" : "10",
"id" : "2",
"special" : "attacktitan",
"name" : "ERENYEAGER"
}
> mongoimport --db aot --collection surveycorps --type csv -headerline --file /home/bmsce/Downloads/username.csv
2023-04-01T10:16:10.634+0530 E QUERY    [thread1] SyntaxError: missing
; before statement @(shell):1:14
> mongoimport --db aot --collection surveycorps --type csv -headerline --file /home/bmsce/Downloads/username.csv;
2023-04-01T10:16:15.466+0530 E QUERY    [thread1] SyntaxError: missing
; before statement @(shell):1:14
> mongoimport --db aot --collection surveycorps --type csv -headerline --file /home/bmsce/Downloads/username.csv;^C
bye
bmsce@bmsce-Precision-T1700:~$ mongo
MongoDB shell version v3.6.8
connecting to: mongodb://127.0.0.1:27017
Implicit session: session { "id" :
UUID("7c88c987-7084-4a02-bd82-90091259985f") }
MongoDB server version: 3.6.8
Server has startup warnings:
2023-04-01T09:16:24.545+0530 I STORAGE  [initandlisten]
2023-04-01T09:16:24.545+0530 I STORAGE  [initandlisten] ** WARNING:
Using the XFS filesystem is strongly recommended with the WiredTiger
storage engine
2023-04-01T09:16:24.545+0530 I STORAGE  [initandlisten] **
See http://dochub.mongodb.org/core/prodnotes-filesystem
2023-04-01T09:16:31.820+0530 I CONTROL  [initandlisten]
2023-04-01T09:16:31.820+0530 I CONTROL  [initandlisten] ** WARNING:
Access control is not enabled for the database.
2023-04-01T09:16:31.821+0530 I CONTROL  [initandlisten] **
Read and write access to data and configuration is unrestricted.
2023-04-01T09:16:31.821+0530 I CONTROL  [initandlisten]
> db
test
> use aot
switched to db aot
> db
aot
> db.surveycorps.save({name:"armin",grade:"10"});
WriteResult({ "nInserted" : 1 })
> db.surveycorps.update({_id:4},{$set:{location:"network"}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.surveycorps.update({_id:4},{$unset:{location:"network"}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.surveycorps.find( {)
